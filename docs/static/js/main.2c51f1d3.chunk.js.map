{"version":3,"sources":["services/pokedexService.js","components/Filters/index.js","components/Card/index.js","components/List/index.js","components/Homepage/index.js","components/Detail/index.js","layout/Header/index.js","layout/Footer/index.js","components/App/index.js","index.js"],"names":["getUrl","anyUrl","fetch","then","res","json","Filters","props","filterByName","queryName","react_default","a","createElement","className","htmlFor","title","id","type","placeholder","onChange","Card","image","name","types","number","evolves","src","alt","map","index","key","concat","List","list","filter","item","toLowerCase","includes","react_router_dom","to","components_Card","sprites","front_default","evolution","Homepage","isLoading","components_Filters","components_List","Detail","detail","back_default","height","weight","abilities","ability","Header","Footer","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","getCardDetails","getPokemonList","_this2","pokemon","results","mainData","url","pokemonData","species","speciesData","evolves_from_species","objectSpread","setState","toConsumableArray","sort","b","find","parseInt","event","inputValue","currentTarget","value","_this3","_this$state","layout_Header","react_router","exact","path","render","components_Homepage","routerProps","components_Detail","match","params","layout_Footer","PureComponent","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c51f1d3.chunk.js","sourcesContent":["const URL = 'https://pokeapi.co/api/v2/pokemon/?limit=25&offset=0';\n\nconst fetchPokemonList = () => fetch(URL).then(res => res.json());\nconst getUrl = anyUrl => fetch(anyUrl).then(res => res.json());\n\nexport { fetchPokemonList, getUrl };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst Filters = props => {\n  const { filterByName, queryName } = props;\n\n  return (\n    <form className=\"filter\">\n      <label\n        className=\"filter-name__label\"\n        htmlFor=\"filter-name\"\n        title=\"Find by name\"\n      >\n        <input\n          className=\"filter-name__input\"\n          id=\"filter-name\"\n          type=\"text\"\n          placeholder=\"Put the name of a pokemon\"\n          onChange={filterByName}\n          queryName={queryName}\n        />\n      </label>\n    </form>\n  );\n};\n\nFilters.propTypes = {\n  filterByName: PropTypes.func.isRequired,\n  queryName: PropTypes.string.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nconst Card = props => {\n  const { image, name, types, number, evolves } = props;\n\n  return (\n    <div className=\"card__container\">\n      <div className=\"card__image-wrapper\">\n        <img className=\"card__image\" src={image} alt={name} />\n        <p className=\"card__number\">ID/{number}</p>\n      </div>\n      <div className=\"card__info-wrapper\">\n        <p className=\"card__name\">{name}</p>\n        <ul className=\"card__types\">\n          {types.map((type, index) => (\n            <li key={`${number + index}`} className=\"card__types-type\">\n              {type.type.name}\n            </li>\n          ))}\n        </ul>\n        {evolves ? (\n          <p className=\"card__evolution\">\n            Evolves from:<p className=\"card__evolution-evolves\">{evolves}</p>\n          </p>\n        ) : (\n          <p className=\"card__evolution\">Pre-evolution</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  types: PropTypes.arrayOf(PropTypes.object).isRequired,\n  number: PropTypes.number.isRequired,\n  evolves: PropTypes.string.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Card from '../Card';\nimport './styles.scss';\n\nconst List = props => {\n  const { list, queryName } = props;\n\n  return (\n    <ul className=\"list__container\">\n      {list\n        .filter(item =>\n          item.name.toLowerCase().includes(queryName.toLowerCase()),\n        )\n        .map(item => {\n          return (\n            <li key={item.id}>\n              <Link to={`/card-detail/${item.id}`}>\n                <Card\n                  image={item.sprites.front_default}\n                  name={item.name}\n                  types={item.types}\n                  number={item.id}\n                  evolves={item.evolution}\n                />\n              </Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n\nList.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  queryName: PropTypes.string.isRequired,\n};\n\nexport default List;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from '../Filters';\nimport List from '../List';\nimport './styles.scss';\n\nconst Homepage = props => {\n  const { list, isLoading, queryName, filterByName } = props;\n\n  return (\n    <div className=\"page__container\">\n      {isLoading ? (\n        <progress className=\"loading\">Loading...</progress>\n      ) : (\n        <main className=\"main__container\">\n          <Filters filterByName={filterByName} />\n          <List list={list} filterByName={filterByName} queryName={queryName} />\n        </main>\n      )}\n    </div>\n  );\n};\n\nHomepage.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  queryName: PropTypes.string.isRequired,\n  filterByName: PropTypes.func.isRequired,\n};\n\nexport default Homepage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\n\nconst Detail = props => {\n  const { detail } = props;\n\n  return (\n    <div className=\"detail__container\">\n      {detail ? (\n        <div className=\"detail__card\">\n          <h2 className=\"detail__card-title\">{detail.name}</h2>\n          <p className=\"detail__id\">#{detail.id}</p>\n          <div className=\"detail__image-wrapper\">\n            <img\n              className=\"detail__image\"\n              src={detail.sprites.front_default}\n              alt={detail.name}\n            />\n            <img\n              className=\"detail__image\"\n              src={detail.sprites.back_default}\n              alt={detail.name}\n            />\n          </div>\n          <ul className=\"detail__types\">\n            {detail.types.map((type, index) => (\n              <li key={`${detail.id + index}`} className=\"detail__types-type\">\n                {type.type.name}\n              </li>\n            ))}\n          </ul>\n          <h3 className=\"detail__profile-title\">Profile</h3>\n          <div className=\"detail__profile\">\n            <ul className=\"detail__profile-info\">\n              <li className=\"detail__profile-info--element\">\n                <strong>Height:</strong> {detail.height / 10} m\n              </li>\n              <li className=\"detail__profile-info--element\">\n                <strong>Weight:</strong> {detail.weight / 10} kg\n              </li>\n            </ul>\n            <div className=\"detail__profile-abilities\">\n              Abilities:\n              <ul className=\"detail__profile-abilities-list\">\n                {detail.abilities.map((ability, index) => (\n                  <li\n                    key={`${detail.id + index}`}\n                    className=\"detail__profile-abilities-ability\"\n                  >\n                    {ability.ability.name}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <progress className=\"loading\">Loading...</progress>\n      )}\n      <Link to=\"/\">Go back</Link>\n    </div>\n  );\n};\n\nDetail.propTypes = {\n  detail: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default Detail;\n","import React from 'react';\nimport './styles.scss';\n\nconst Header = () => {\n  return (\n    <header className=\"header__container\">\n      <div className=\"header__triangle-left\"></div>\n      <div className=\"header__triangle-right\"></div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './styles.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer__container\">\n      <div className=\"footer__circle-left\"></div>\n      <div className=\"footer__circle-right\"></div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { PureComponent } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { fetchPokemonList, getUrl } from '../../services/pokedexService';\nimport Homepage from '../Homepage';\nimport Detail from '../Detail';\nimport Header from '../../layout/Header';\nimport Footer from '../../layout/Footer';\nimport './styles.scss';\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [],\n      isLoading: true,\n      queryName: '',\n    };\n\n    this.filterByName = this.filterByName.bind(this);\n    this.getCardDetails = this.getCardDetails.bind(this);\n  }\n\n  componentDidMount() {\n    this.getPokemonList();\n  }\n\n  getPokemonList() {\n    fetchPokemonList().then(pokemon => {\n      const { results } = pokemon;\n      results.map(item => {\n        let mainData = {};\n        return getUrl(item.url).then(pokemonData => {\n          mainData = pokemonData;\n          return getUrl(pokemonData.species.url).then(speciesData => {\n            const evolves = speciesData.evolves_from_species;\n            mainData = {\n              ...mainData,\n              evolution: evolves ? evolves.name : '',\n            };\n            this.setState(state => {\n              return {\n                list: [...state.list.sort((a, b) => a.id - b.id), mainData],\n                isLoading: false,\n              };\n            });\n          });\n        });\n      });\n    });\n  }\n\n  getCardDetails(id) {\n    const { list } = this.state;\n    return list.find(item => item.id === parseInt(id, 10));\n  }\n\n  filterByName(event) {\n    const inputValue = event.currentTarget.value;\n    this.setState({\n      queryName: inputValue,\n    });\n  }\n\n  render() {\n    const { list, isLoading, queryName } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Header />\n        <div className=\"app__container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <Homepage\n                  list={list}\n                  isLoading={isLoading}\n                  queryName={queryName}\n                  filterByName={this.filterByName}\n                />\n              )}\n            />\n            <Route\n              path=\"/card-detail/:id\"\n              render={routerProps => (\n                <Detail\n                  detail={this.getCardDetails(routerProps.match.params.id)}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}